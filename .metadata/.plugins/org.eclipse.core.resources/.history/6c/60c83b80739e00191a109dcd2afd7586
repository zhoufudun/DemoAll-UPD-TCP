package Server;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.Socket;

public class CilentHandler {
	  private Socket client;
      private boolean flag=true;
      void ClientHandler(Socket client){
          this.client=client;
      }
      @Override
      public void run() {
          super.run();
          System.out.println("新客户端信息信息："+client.getInetAddress()+" port:"+client.getPort());
          try {

              //得到打印流，用于数据输出，服务器回送数据使用
              PrintStream serverOutput=new PrintStream(client.getOutputStream());
              //得到输入流，用于数据接收
              BufferedReader serverInput=new BufferedReader(new InputStreamReader(client.getInputStream()));
              do{
                  //拿到客户端的一条数据
                  String str=serverInput.readLine();//等待数据，阻塞
                  if("bye".equalsIgnoreCase(str)){
                      flag=false;
                      //回送给客户端
                      serverOutput.println("bye");
                  }else if(!" ".equalsIgnoreCase(str)){
                	  System.out.println(str);
                      serverOutput.println("消息回显，"+str+"\n");
                  }else { //空值不打印
                	  continue;
                  }
              }while(flag);
              //释放资源
              serverOutput.close();
              serverInput.close();	
          }catch (Exception e){
              System.out.println("连接异常断开");
              e.printStackTrace();
          }	
      }
      public void exit() {
    	  flag=false;
      }
  
}
